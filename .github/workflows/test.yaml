name: Test

on:
  push:
    branches: [ 'main', 'master' ]

  pull_request:
    branches: [ 'main', 'master' ]

  merge_group:
    types: [ checks_requested ]

jobs:
  verify-manifests:
    name: Verify manifests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
        id: go
      - name: Run make verify-manifests
        run: |
          make verify-manifests

  verify-bundle:
    name: Verify bundle
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
        id: go
      - name: Verify the bundle
        run: |
          make verify-bundle

  verify-fmt:
    name: Verify fmt
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
        id: go
      - name: Run make verify-fmt
        run: |
          make verify-fmt

  test-scripts:
    name: Test Scripts
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
        id: go
      - name: Run make operator-sdk
        run: |
          make operator-sdk

  unit-tests:
    name: Unit Tests
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
        id: go
      - name: Run make test
        run: |
          make test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unit
          verbose: true
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
  required-checks:
    name: Test Required Checks
    # This check adds a list of checks to one job to simplify adding settings to the repo.
    # If a new check is added in this file, and it should be retested on entry to the merge queue,
    # it needs to be added to the list below aka needs: [ existing check 1, existing check 2, new check ].
    needs: [ verify-manifests, verify-bundle, verify-fmt, test-scripts, unit-tests ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo '${{ toJSON(needs) }}' | jq -e 'all(.[]; .result == "success" or .result == "skipped")'
